/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package hr.algebra.view;

import hr.algebra.dal.Repository;
import hr.algebra.dal.RepositoryFactory;
import hr.algebra.model.NewsFeedUser;
import java.util.Optional;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import org.mindrot.jbcrypt.BCrypt;

/**
 *
 * @author paola
 */

//okvir za dialogPanel
public class LoginDialog extends javax.swing.JDialog {

    private final Repository repository;
    private NewsFeedUser loggedInUser;
    /**
     * Creates new form LoginDialog
     */
    public LoginDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        repository = RepositoryFactory.getRepository();

        LoginPanel loginPanel = new LoginPanel();
        setContentPane(loginPanel); 
        pack();
        setLocationRelativeTo(parent);

        
        
        loginPanel.getLoginButton().addActionListener(e -> {
            String username = loginPanel.getUsername();
            String password = new String(loginPanel.getPassword());

            // special case if user is admin
            if ("admin".equals(username) && "admin123".equals(password)) {
                loggedInUser = new NewsFeedUser(username, password, true);
                dispose();
                return;
            }

            new SwingWorker<Optional<NewsFeedUser>, Void>() {

                @Override
                protected Optional<NewsFeedUser> doInBackground() throws Exception {
                    System.out.println("Continue to check user with db on a separate thread.");
                    return repository.selectUser(username);
                }

                @Override
                protected void done() {
                    try {
                        Optional<NewsFeedUser> userOptional = get();
                        userOptional.ifPresentOrElse(user -> {
                            if (BCrypt.checkpw(password, user.getPasswordHash())) {
                                loggedInUser = user;
                                dispose();
                            } else {
                                JOptionPane.showMessageDialog(LoginDialog.this,
                                        "Invalid password!", "Error", JOptionPane.ERROR_MESSAGE);
                            }
                        }, () -> {
                            JOptionPane.showMessageDialog(LoginDialog.this,
                                    "User not found!", "Error", JOptionPane.ERROR_MESSAGE);
                        });
                    } catch (Exception ex) {
                        ex.printStackTrace();
                        JOptionPane.showMessageDialog(LoginDialog.this,
                                "An error occurred during login.", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }.execute();
        });
    }
	
    public NewsFeedUser getLoggedInUser() {
        return loggedInUser;
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                LoginDialog dialog = new LoginDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
